package com.esb.saml.migration;

import org.junit.Before;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

//@RunWith(SpringJUnit4ClassRunner.class)
@RunWith(SpringRunner.class)
@SpringBootTest
@WebAppConfiguration
class MigrationApplicationTests {

//	private MockMvc mvc;
//
//	@InjectMocks
//	private MgrAlertManagementController mgrAlertManagementController;
//	
//
//
////	MockMvc mvc; //創建MockMvc類的物件
////	  
//	@Before
//	public void setup() throws Exception {
//		mvc = MockMvcBuilders.standaloneSetup(mgrAlertManagementController).build();
//	}
//
//	@Test
//	void contextLoads() throws Exception {
//		mvc.perform(MockMvcRequestBuilders.get("/api")).andExpect(MockMvcResultMatchers.status().isOk())
//				.andExpect(MockMvcResultMatchers.content().string("hello world"));
//
//	}

	
	 private MockMvc mockMvc;

	    @Autowired
	    private WebApplicationContext wac;

	    @Before
	    public void setup(){
	        mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();  //構建MockMVC
	    }

	    @Test
	    public void getUser() throws Exception {
	        String responseString = mockMvc.perform(MockMvcRequestBuilders.post("/api/migration")).andReturn().getResponse().getContentAsString();
	        System.out.println("result : "+responseString);
	    }

}
